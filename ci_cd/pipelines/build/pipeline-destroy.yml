name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r) 

variables:
- group: TerraformVarsGroup
- name: repo_id
  value: blackdevops/azurearcaks
- name: eks_artifact_name
  value: TF_Plan_EKS
- name: aks_artifact_name
  value: TF_Plan_AKS
- name: gke_artifact_name
  value: TF_Plan_GKE
- name: region
  value: us-west-1

pool:
  name: aws

stages:    

  - stage: Initialize
    displayName: Stage - TF Init
    jobs:
    - job: Initialize_Terraform
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/eks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 

  - stage: ReleaseEKS
    displayName: Stage - TF Destroy EKS
    jobs:
    - deployment: Destroy
      displayName: 'Terraform Destroy'
      environment: aws
      pool: aws
      strategy:
        runOnce:
          deploy:
            steps:
            - task: TerraformCLI@0
              displayName: Init
              inputs:
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)/eks'
                backendType: 'selfConfigured'
                allowTelemetryCollection: false 
            - task: TerraformCLI@0
              displayName: Destroy
              inputs:
                command: 'destroy'
                workingDirectory: '$(System.DefaultWorkingDirectory)/eks'
                commandOptions: '-var "region=$(region)" -var "access_key=$(access-key)" -var "secret_key=$(secret-key)"'
                allowTelemetryCollection: false

  - stage: ValidateAKS
    pool: blackdevops
    dependsOn: ['Initialize']
    condition: succeeded('Initialize')
    displayName: Stage - TF Validate AKS
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Validate
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
          allowTelemetryCollection: false

  - stage: PlanAKS
    pool: blackdevops
    displayName: Stage - TF Plan AKS
    dependsOn: [ValidateAKS]
    condition: succeeded('ValidateAKS')
    jobs:
    - job: Generate_TF_Plan
      steps:
      - task: TerraformCLI@0
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
          commandOptions: '-input=false -var "client_id=$(client-id)" -var "client_secret=$(client-secret)" -var "subscription_id=$(subscription-id)" -var "tenant_id=$(tenant-id)"'
          allowTelemetryCollection: false
          publishPlanResults: '$(aks_artifact_name).tfplan'
      - task: PublishPipelineArtifact@1
        displayName: Publishing Terraform Plan
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/aks'
          artifact: '$(Build.SourceBranchName)_$(aks_artifact_name)'

  - stage: ReleaseAKS
    pool: blackdevops
    displayName: Stage - TF Apply AKS
    dependsOn: [PlanAKS]
    condition: succeeded('PlanAKS')
    jobs:
    - deployment: Apply
      displayName: 'Terraform Apply'
      environment: azure
      pool: blackdevops
      strategy:
        runOnce:
          deploy:
            steps:
            - task: TerraformCLI@0
              displayName: Init
              inputs:
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
                backendType: 'selfConfigured'
                allowTelemetryCollection: false 
            - task: TerraformCLI@0
              displayName: Apply
              inputs:
                command: 'destroy'
                workingDirectory: '$(System.DefaultWorkingDirectory)/aks'
                commandOptions: '-input=false -var "client_id=$(client-id)" -var "client_secret=$(client-secret)" -var "subscription_id=$(subscription-id)" -var "tenant_id=$(tenant-id)"'
                allowTelemetryCollection: false

  - stage: ValidateGKE
    dependsOn: ['Initialize']
    condition: succeeded('Initialize')
    displayName: Stage - TF Validate GKE
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: downloadsSecureFile@0
        displayName: DownloadGCPCredentials
        inputs:
          fileInput: 'slsfs-dev-365463f644a0.json'
          targetPath: '$(System.DefaultWorkingDirectory)/gke'
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Validate
        inputs:
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
          allowTelemetryCollection: false

  - stage: PlanGKE
    displayName: Stage - TF Plan GKE
    dependsOn: [ValidateGKE]
    condition: succeeded('ValidateGKE')
    jobs:
    - job: Generate_TF_Plan
      steps:
      - task: downloadsSecureFile@0
        displayName: DownloadGCPCredentials
        inputs:
          fileInput: 'slsfs-dev-365463f644a0.json'
          targetPath: '$(System.DefaultWorkingDirectory)/gke'
      - task: TerraformCLI@0
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
#          commandOptions: '-var "gcp_svs_account=$(gcp_credentials.secureFilePath)"'
          allowTelemetryCollection: false
          publishPlanResults: '$(gke_artifact_name).tfplan'
      - task: PublishPipelineArtifact@1
        displayName: Publishing Terraform Plan
        inputs:
          targetPath: '$(System.DefaultWorkingDirectory)/gke'
          artifact: '$(Build.SourceBranchName)_$(gke_artifact_name)'

  - stage: ReleaseGKE
    displayName: Stage - TF Apply GKE
    dependsOn: [PlanGKE]
    condition: succeeded('PlanGKE')
    jobs:
    - deployment: Apply
      displayName: 'Terraform Apply'
      environment: gcp
      pool: blackdevops
      strategy:
        runOnce:
          deploy:
            steps:
            - task: downloadsSecureFile@0
              displayName: DownloadGCPCredentials
              inputs:
                fileInput: 'slsfs-dev-365463f644a0.json'
                targetPath: '$(System.DefaultWorkingDirectory)/gke'
            - task: TerraformCLI@0
              displayName: Init
              inputs:
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
                backendType: 'selfConfigured'
                allowTelemetryCollection: false 
            - task: TerraformCLI@0
              displayName: Apply
              inputs:
                command: 'destroy'
                workingDirectory: '$(System.DefaultWorkingDirectory)/gke'
#                commandOptions: '-var "gcp_svs_account=$(gcp_credentials.secureFilePath)"'
                allowTelemetryCollection: false

