name: $(TeamProject)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r) 

trigger:
  branches:
    include:
      - main
  paths:
    include:
    - networks
    exclude:
    - ci_cd
    - eks 
    - gke 
    - aks 
    - clusters

variables:
- group: TerraformVarsGroup
- name: repo_id
  value: blackdevops/azurearcaks
- name: region
  value: us-west-1

pool:
  name: blackdevops

stages:    

  - stage: Create_Networks
    displayName: Create Networks
    jobs:
    - job: Initialize_Terraform
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/eks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 

  - stage: EKS_VPC
    dependsOn: [Create_Networks]
    condition: succeeded('Create_Networks')
    displayName: EKS VPC
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/eks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/eks'
          commandOptions: '-var "region=$(region)" -var "access_key=$(access-key)" -var "secret_key=$(secret-key)"'
          allowTelemetryCollection: false

  - stage: AKS_VNET
    pool: blackdevops
    dependsOn: ['Create_Networks']
    condition: succeeded('Create_Networks')
    displayName: AKS VNET
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/aks'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/aks'
          commandOptions: '-input=false -var "client_id=$(client-id)" -var "client_secret=$(client-secret)" -var "subscription_id=$(subscription-id)" -var "tenant_id=$(tenant-id)"'
          allowTelemetryCollection: false

  - stage: GKE_VPC
    dependsOn: ['Create_Networks']
    condition: succeeded('Create_Networks')
    displayName: GKE VPC
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: downloadsSecureFile@0
        displayName: DownloadGCPCredentials
        inputs:
          fileInput: 'slsfs-dev-365463f644a0.json'
          targetPath: '$(System.DefaultWorkingDirectory)/networks/gke'
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/gke'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/networks/gke'
          allowTelemetryCollection: false

  - stage: GKE_Cluster
    dependsOn: ['Create_Networks']
    condition: succeeded('Create_Networks')
    displayName: Destroy GKE
    jobs:
    - job: Validate_TF_Config
      steps:
      - task: TerraformCLI@0
        displayName: Init
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/clusters/gke'
          backendType: 'selfConfigured'
          allowTelemetryCollection: false 
      - task: downloadsSecureFile@0
        displayName: DownloadGCPCredentials
        inputs:
          fileInput: 'slsfs-dev-365463f644a0.json'
          targetPath: '$(System.DefaultWorkingDirectory)/clusters/gke'
      - task: TerraformCLI@0
        displayName: Terraform Plan
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)/clusters/gke'
          allowTelemetryCollection: false